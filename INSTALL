Required packages:
------------------

python >= 2.6.5

numpy  (version 1.9.0 may not work, as an alternative, install 1.8.0)
astropy (>= 0.2)
matplotlib
cuda (optional)    # You don't need to decide right now, you can download and install cuda
pycuda (optional)  # and pycuda later on if you decide that you need them.

#########################################
To install:
-----------

There are 5 simple steps to get a working version of the ALIS code,
provided that you have all of the required packages listed above.
If you don't have the required packages (or you don't have python),
please see the section below called `starting from scratch'.

NOTE: After you have a successful install, and before doing any new
piece of research, I recommend that you update the software to get
the latest version (for details see the section `update').

1. Go to your software directory (or any directory you want to place ALIS in):

cd /home/username/software/


2. Checkout the latest version of ALIS:

svn checkout http://project-alis.googlecode.com/svn/trunk/ project-alis-read-only


3. (Optional) Rename the directory to remove the '-read-only' part of the name:

mv project-alis-read-only project-alis


4. Create the following alias for the software (place this in your .tcshrc file):
alias alis 'python /home/username/software/project-alis/src/alis.py'


5. (Optional) Add the ALIS directory to your PYTHONPATH (if you want to call
   ALIS from within your own PYTHON script):

If you have already specified your PYTHONPATH somewhere in your .tcshrc, use:
setenv PYTHONPATH ${PYTHONPATH}:/home/username/software/project-alis/src

otherwise (this is the first PYTHONPATH you've specified --- are you sure?), use:
setenv PYTHONPATH /home/username/software/project-alis/src


That's it! But don't forget to source your .tcshrc file for steps 4 & 5 to take effect.

#########################################
To update:
-----------

1. Go to the directory where your placed alis:

cd /home/username/software/project-alis


2. Update the code by typing the following at the command line

svn update

#########################################
Starting From Scratch

You only need to read this section if you're starting from scratch.
I will assume that you are using a directory structure:

/home/username/software/python/py-lib

where `username' is your username. If you want to install all of these
packages elsewhere, you will need to make the appropriate changes
throughout this guide. If the above directories do not exist, make them.


Step 1. You can check if you have an appropriate version of python
by typing the following command at a terminal:

python --version

If you do have a working python install, you should check that you
have Tkinter. If your python version is 2.* type:

python
import Tkinter

Otherwise, if you have python version 3.* type:
python
import tkinter

If this step fails with an ImportError, you need to get a new version
of Python. Otherwise, if you can import Tkinter with no troubles, you
can skip step 2.


Step 2. Download the latest version of python from:

http://www.python.org/download/

The way that I usually do this is with wget at a terminal, but you can
just as well download it manually and place it in a directory of your
choosing.

cd /home/username/software/python
wget http://www.python.org/ftp/python/2.7.3/Python-2.7.3.tgz
gunzip Python-2.7.3.tgz
tar -xvf Python-2.7.3.tar
cd Python-2.7.3
./configure --prefix=/home/username/software/python/Python-2.7.3 --exec-prefix=/home/username/software/python/Python-2.7.3
make
make install

# Put an alias to python and some envirnoment variables in your .tcshrc file:
emacs ~/.tcshrc

alias python /home/username/software/python/Python-2.7.3/python
setenv MYPYDIR /home/username/software/python
setenv PYTHONPATH $MYPYDIR/py-lib

You should now have a working version of Python! Now go back to Step 1 and
perform the same tests. If you cannot import Tkinter, you will need to install
these manually before continuing.


Step 3. Get the latest release of numpy from the following site (I will use wget):
https://pypi.python.org/pypi/numpy

cd /home/username/software/python
wget https://pypi.python.org/packages/source/n/numpy/numpy-1.7.0.tar.gz
tar -zxvf numpy-1.7.0.tar.gz
cd numpy-1.7.0
python setup.py install --user
cd ../


Step 4. Get the latest version of matplotlib from the following site (I will use wget):
http://matplotlib.org/downloads.html

cd /home/username/software/python
wget https://downloads.sourceforge.net/project/matplotlib/matplotlib/matplotlib-1.2.1/matplotlib-1.2.1.tar.gz
tar -zxvf matplotlib-1.2.1.tar.gz
cd matplotlib-1.2.1
python setup.py install --user
cd ../

# Get the latest version of astropy from the following site (I will use wget):
http://www.astropy.org/

cd /home/username/software/python
wget http://pypi.python.org/packages/source/a/astropy/astropy-0.2.1.tar.gz
tar -zxvf astropy-0.2.1.tar.gz
cd astropy-0.2.1
python setup.py install --user
cd ../


You're now ready to install ALIS. See the 5 simple steps above in the section `install'

#########################################

